# The environment Craft is currently running in ('dev', 'staging', 'production', etc.)
ENVIRONMENT=dev

# The secure key Craft will use for hashing and encrypting data
# Make sure you run ./craft setup/security-key
SECURITY_KEY=

# The database driver that will used ('mysql' or 'pgsql')
DB_DRIVER=mysql

# The database server name or IP address - in this case, we're using the
# docker network's handle for our server since we're assuming the webserver is
# running parallel
DB_SERVER=mysql-server

# The database username to connect with
DB_USER=craftcms

# The database password to connect with
DB_PASSWORD=Password1!

# The name of the database to select
DB_DATABASE=dev_craftcms

# The database schema that will be used (PostgreSQL only)
DB_SCHEMA=public

# The prefix that should be added to generated table names (only necessary if multiple things are sharing the same database)
DB_TABLE_PREFIX=craft_

# The port to connect to the database with. Will default to 5432 for PostgreSQL and 3306 for MySQL.
DB_PORT=3306

ASSETS_BASE_URL=
AWS_KEY_ID=
AWS_SECRET=
AWS_REGION=us-east-1
AWS_CF_ID=
AWS_S3_BUCKET=

REDIS_HOST=redis-server
REDIS_PORT=6379
REDIS_DB=1
REDIS_PASS=

# This is for the docker container
APACHE_SERVER_NAME=localhost
PHP_ERROR_REPORTING=E_ALL
PHP_DISPLAY_ERRORS=On
PHP_HTML_ERRORS=On
# PHP_XDEBUG_ENABLED=On

# For frontend build process
PUBLIC_PATH=http://localhost:8080
DEVSERVER_PUBLIC=http://localhost:8080
DEVSERVER_HOST="0.0.0.0"
DEVSERVER_POLL=1
DEVSERVER_PORT=8080
DEVSERVER_HTTPS=0

TWIGPACK_DEV_SERVER_MANIFEST=http://host.docker.internal:8080/
TWIGPACK_DEV_SERVER_PUBLIC=http://localhost:8080/

# This gets set to an alias for you to use in front of static assets in twig if you want to serve via CDN
# {{ alias('@dist/images/logo.png') }}
DIST_BASE_URL=
